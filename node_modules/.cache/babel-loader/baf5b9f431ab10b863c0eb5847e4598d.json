{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/shubham/Desktop/Training/src/components/TextField/TextField.jsx\";\n\nimport React from 'react';\nimport './style.css';\nimport { Textbox } from 'react-inputs-validation';\n\nvar test = function test() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"This is valid Input\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"formControl\",\n    placeholder: \"Enter Your Name Here!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"This is Disabled Input\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"formControl\",\n    placeholder: \"\",\n    disabled: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Input Box with errors\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"formControl\",\n    placeholder: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Textbox, {\n    tabIndex: \"1\" // Optional.[String or Number].Default: -1.\n    ,\n    id: 'Name' // Optional.[String].Default: \"\".  Input ID.\n    ,\n    name: \"Name\" // Optional.[String].Default: \"\". Input name.\n    ,\n    type: \"text\" // Optional.[String].Default: \"text\". Input type [text, password, number].\n    ,\n    value: nameRg // Optional.[String].Default: \"\".\n    ,\n    placeholder: \"Place your name here ^-^\" // Optional.[String].Default: \"\".\n    ,\n    onChange: function onChange(name, e) {\n      _this.setState({\n        nameRg: nameRg\n      });\n\n      console.log(e);\n    } // Required.[Func].Default: () => {}. Will return the value.\n    ,\n    onBlur: function onBlur(e) {\n      console.log(e);\n    } // Optional.[Func].Default: none. In order to validate the value on blur, you MUST provide a function, even if it is an empty function. Missing this, the validation on blur will not work.\n    ,\n    validationOption: {\n      reg: /^d{5}$/,\n      // Optional.[Bool].Default: \"\" Custom regex.\n      regMsg: 'failed in reg.test(value)' // Optional.[String].Default: \"\" Custom regex error message.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nexport default test;","map":{"version":3,"sources":["/home/shubham/Desktop/Training/src/components/TextField/TextField.jsx"],"names":["React","Textbox","test","nameRg","name","e","setState","console","log","reg","regMsg"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,OAAR,QAAsB,yBAAtB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAI;AAGd,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,WAAW,EAAC,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,EAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,WAAW,EAAC,EAAvD;AAA0D,IAAA,QAAQ,EAAC,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,EAMI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAA2C,IAAA,WAAW,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,OAAD;AACN,IAAA,QAAQ,EAAC,GADH,CACO;AADP;AAEN,IAAA,EAAE,EAAE,MAFE,CAEM;AAFN;AAGN,IAAA,IAAI,EAAC,MAHC,CAGM;AAHN;AAIN,IAAA,IAAI,EAAC,MAJC,CAIM;AAJN;AAKN,IAAA,KAAK,EAAEC,MALD,CAKS;AALT;AAMN,IAAA,WAAW,EAAC,0BANN,CAMiC;AANjC;AAON,IAAA,QAAQ,EAAE,kBAACC,IAAD,EAAOC,CAAP,EAAa;AACrB,MAAA,KAAI,CAACC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAANA;AAAF,OAAd;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACD,KAVK,CAUH;AAVG;AAWN,IAAA,MAAM,EAAE,gBAACA,CAAD,EAAO;AAACE,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AAAe,KAXzB,CAW2B;AAX3B;AAYN,IAAA,gBAAgB,EAAE;AAChBI,MAAAA,GAAG,EAAE,QADW;AACD;AACfC,MAAAA,MAAM,EAAE,2BAFQ,CAEoB;;AAFpB,KAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADD;AA4BF,CA/BD;;AAgCA,eAAeR,IAAf","sourcesContent":["import React from 'react'\nimport './style.css'\nimport {Textbox} from 'react-inputs-validation';\nconst test = ()=>{\n\n\n   return (\n    <div>\n        <h1>This is valid Input</h1>\n        <input type=\"text\" className=\"formControl\" placeholder=\"Enter Your Name Here!\" />\n        <h1>This is Disabled Input</h1>\n        <input type=\"text\" className=\"formControl\" placeholder=\"\" disabled=\"disabled\" />\n        <h1>Input Box with errors</h1>\n        <input type=\"text\" className=\"formControl\" placeholder=\"\" />\n        <Textbox\n  tabIndex=\"1\" // Optional.[String or Number].Default: -1.\n  id={'Name'} // Optional.[String].Default: \"\".  Input ID.\n  name=\"Name\" // Optional.[String].Default: \"\". Input name.\n  type=\"text\" // Optional.[String].Default: \"text\". Input type [text, password, number].\n  value={nameRg} // Optional.[String].Default: \"\".\n  placeholder=\"Place your name here ^-^\" // Optional.[String].Default: \"\".\n  onChange={(name, e) => {\n    this.setState({ nameRg });\n    console.log(e);\n  }} // Required.[Func].Default: () => {}. Will return the value.\n  onBlur={(e) => {console.log(e)}} // Optional.[Func].Default: none. In order to validate the value on blur, you MUST provide a function, even if it is an empty function. Missing this, the validation on blur will not work.\n  validationOption={{\n    reg: /^d{5}$/, // Optional.[Bool].Default: \"\" Custom regex.\n    regMsg: 'failed in reg.test(value)' // Optional.[String].Default: \"\" Custom regex error message.\n  }}\n/>\n    </div>\n       \n   )\n}\nexport default test;"]},"metadata":{},"sourceType":"module"}